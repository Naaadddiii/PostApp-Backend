{
  "openapi": "3.0.0",
  "info": {
    "title": "Post App",
    "version": "1.0.0",
    "description": "Posting App (Swagger)"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "Post": {
        "type": "object",
        "required": [
          "title",
          "user"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "The auto-generated id of the post."
          },
          "title": {
            "type": "string",
            "description": "The title of the post."
          },
          "description": {
            "type": "string",
            "description": "The description of the post."
          },
          "image": {
            "type": "string",
            "description": "The image of the post."
          },
          "user": {
            "type": "string",
            "description": "The user id who created the post."
          },
          "likes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The user id who liked the post."
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "The auto-generated id of the comment."
                },
                "comment": {
                  "type": "string",
                  "description": "The comment content."
                },
                "user": {
                  "type": "string",
                  "description": "The user id who created the comment."
                },
                "post": {
                  "type": "string",
                  "description": "The post id the comment belongs to."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of when the comment was created."
                },
                "mentionedUsers": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The user id who was mentioned in the comment."
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Unauthorized access error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized access"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "User management API"
    },
    {
      "name": "Post",
      "description": "Post management API"
    }
  ],
  "paths": {
    "/api/user/signup": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid request payload"
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "summary": "Login to the system",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "posts": {
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/post": {
      "get": {
        "summary": "Get all posts",
        "description": "Retrieve a list of all posts",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/post/add": {
      "post": {
        "summary": "Add a new post",
        "description": "Create a new post",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the post."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the post."
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The image of the post."
                  }
                },
                "required": [
                   "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The newly created post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/post/update/{id}": {
      "put": {
        "summary": "Update a post",
        "description": "Update an existing post by its ID",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the post to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The new title of the post."
                  },
                  "description": {
                    "type": "string",
                    "description": "The new description of the post."
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "The new image of the post."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "The post with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },    
    "/api/post/{id}": {
      "get": {
        "summary": "Get post by ID",
        "description": "Retrieve a post by its ID",
        "tags": ["Post"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the post to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The post with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete a post",
        "description": "Delete an existing post by its ID",
        "tags": ["Post"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the post to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/post/user/{id}": {
      "get": {
        "summary": "Get posts by user ID",
        "description": "Retrieve a list of posts by the ID of the user who created them",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user to retrieve posts for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts created by the specified user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/post/like/{id}": {
      "post": {
        "summary": "Add a like to a post",
        "description": "Add a like to a post by its ID",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the post to add the like",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated post with the added like",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/post/{id}/unlike/": {
      "post": {
        "summary": "Remove a like from a post",
        "description": "Remove a like from a post by its ID",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the post to remove the like",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated post with the removed like",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/post/{id}/comment/": {
      "post": {
        "summary": "Add a comment to a post",
        "description": "Add a comment to a post by its ID",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the post to add the comment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "The comment to add to the post."
                  }
                },
                "required": [
                  "comment"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated post with the added comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/post/{id}/comments": {
      "get": {
        "summary": "Get all comments for a post",
        "description": "Retrieve a list of all comments for a post by its ID",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "in": "path",
          "name": "id",
          "required": true,
          "description": "ID of the post to retrieve comments for",
          "schema": {"type": "string"}
        }],
        "responses": {
          "200": {
            "description": "A list of comments for the specified post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Post"}
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/api/post/{id}/comment/{id}": {
      "put": {
        "summary": "Edit a comment",
        "description": "Edit a comment by its ID",
        "tags": ["Post"],
        "security": [{"bearerAuth": []}],
        "parameters": [{
          "in": "path",
          "name": "id",
          "required": true,
          "description": "ID of the comment to edit",
          "schema": {"type": "string"}
        }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "The updated comment."
                  }
                },
                "required": ["comment"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated comment",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Post"}
              }
            }
          },
          "401": {"$ref": "#/components/responses/UnauthorizedError"},
          "500": {"$ref": "#/components/responses/InternalServerError"}
        }
      }
    },
    "/api/post/{id}/comment/{id}/": {
      "delete": {
        "summary": "Delete a comment",
        "description": "Delete a comment by its ID",
        "tags": [
          "Post"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the comment to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The comment was deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  }
}
